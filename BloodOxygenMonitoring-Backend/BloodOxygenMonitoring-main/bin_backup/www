#!/usr/bin/env node
const app = require('../app');
const debug = require('debug')('your-app-name:server');
const https = require('https');
const fs = require('fs');

// Certificate
const privateKey = fs.readFileSync('./ssl/node-selfsigned.key', 'utf8');
const certificate = fs.readFileSync('./ssl/node-selfsigned.crt', 'utf8');
const credentials = {
  key: privateKey,
  cert: certificate
};

const httpsPort = 3000;

// Create HTTPS server
const httpsServer = https.createServer(credentials, app);

// Listen on provided port
httpsServer.listen(httpsPort);

// Event listeners
httpsServer.on('error', onError);
httpsServer.on('listening', onListening);

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // Handle specific listen errors
  switch (error.code) {
    case 'EACCES':
      console.error('Port requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error('Port is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = httpsServer.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}

console.log('HTTPS server running on port ' + httpsPort);
